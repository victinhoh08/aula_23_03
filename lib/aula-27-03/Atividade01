# Atividade: Cria√ß√£o de Classes em Dart

üìå **Instru√ß√µes:** Responda cada quest√£o com aten√ß√£o, aplicando os conceitos estudados. As perguntas aumentam gradativamente de dificuldade, ent√£o siga na ordem sugerida.

## Parte 1: Conceitos b√°sicos de classes e atributos nulos (?)

1. O que significa o uso do operador ? em Dart ao declarar um atributo de uma classe? Explique com um exemplo.
R:  O operador ? torna o atributo nome opcional, permitindo que ele seja nulo. Isso significa que o valor de nome pode ser null em vez de ser uma string obrigat√≥ria.
2. No c√≥digo abaixo, h√° um erro. Qual √© ele? Como corrigir?
```dart
class Carro {
  String? marca;
  int ano;
}

R: O erro √© que esta faltado o operador ? no int ano; para corrigir √© colocar o operador ? no int ano. Vai ficar int? ano;
```
3. Complete a implementa√ß√£o da classe Produto, garantindo que seus atributos (nome e preco) possam ser nulos:
```dart
class Produto {
  String? nome;
  double? preco;
}
```
4. Modifique o c√≥digo abaixo para garantir que, se nenhuma entrada for fornecida, os atributos recebam um valor padr√£o:
```dart
import 'dart:io';

void main() {
  Produto produto = Produto();
  print('Digite o nome do produto:');
  produto.nome = stdin.readLineSync()// ?? 'Produto desconhecido'
  print('Digite o pre√ßo do produto:');
  produto.preco = double.tryParse(stdin.readLineSync() ?? '0');
  print('Produto: ${produto.nome}, Pre√ßo: ${produto.preco}');
}
class Produto {
  String? nome;
  double? preco;
}
```

---

## Parte 2: Uso do late

5. Explique a diferen√ßa entre ? e late na declara√ß√£o de atributos em Dart.
R: O operador ? permite que os valores sejam nulo e o late permite que as variaveis n√£o nulas sem a necessidade de inicializa√ß√£o tardia.

6. No c√≥digo abaixo, o que acontecer√° se tentarmos acessar pessoa.idade antes de atribuir um valor? Justifique.
```dart
class Pessoa {
  late int idade;
}
R: Acontecer√° um erro de execu√ß√£o, caso n√ßao consiga inicializar ele primeiro.
```
7. Modifique a classe Funcionario abaixo para utilizar late corretamente e evitar problemas de inicializa√ß√£o:
```dart
class Funcionario {
  late String nome;
  late double salario;
}

void main(){
    Funcionario {
        nome: 'Danilo';
        salario: 25000.00;
    }
}


```

---

## Parte 3: Construtores e Inicializa√ß√£o Obrigat√≥ria
8. Escreva um construtor para a classe Aluno, garantindo que nome e nota sejam inicializados na cria√ß√£o do objeto.
```dart
class Aluno {
  String nome;
  double nota;

  Aluno(this.nome, this.nota);
}

void main(){
    nome: 'Danilo',
    nota: 7.0
}
print('nome: ${aluno.nome}, nota: ${aluno.nota}');
```
9. Qual a vantagem de utilizar um construtor em vez de definir atributos com ? ou late?
R: O construtor tem a vantagem de  inicializar corretamente, ja late e operador ? pode acontecer de ter inicializa√ß√µes nulas ou incorretas.

10. Modifique o c√≥digo abaixo para utilizar par√¢metros nomeados no construtor:
```dart
class Endereco {
  String rua;
  String cidade;
  
  Endereco(this.rua, this.cidade);
}
-------------------
class Endereco {
  String rua;
  String cidade;
  
  Endereco(required this.rua, required this.cidade);
}

```

---

## Parte 4: Valida√ß√£o com Getters e Setters

11. O que s√£o m√©todos get e set em Dart? Para que servem?
12. Implemente um getter para a classe Retangulo que calcule a √°rea automaticamente:
```dart
class Retangulo {
  double largura;
  double altura;
  
  Retangulo(this.largura, this.altura);
}

```
13. Modifique a classe abaixo para que o set de idade n√£o permita valores negativos:
```dart
class Pessoa {
  int idade;
  
  Pessoa(this.idade);
}
```
14. Modifique a classe abaixo para que o set de idade n√£o permita valores negativos:
```dart
class Pessoa {
  double _peso;
  
  double get peso => _peso;
  set peso(double novoPeso) {
    if (novoPeso > 0) _peso = novoPeso;
  }
  
  Pessoa(this._peso);
}
```

---

## Parte 5: Aplica√ß√£o Pr√°tica e Exerc√≠cios Avan√ßados

15. Crie uma classe ContaBancaria que possua os atributos titular, saldo e um m√©todo depositar(double valor). O saldo deve ser alterado apenas pelo m√©todo.

16. Modifique a classe ContaBancaria da quest√£o anterior, adicionando um m√©todo sacar(double valor), garantindo que o saldo n√£o fique negativo.

17. Reescreva a classe Carro para utilizar construtores nomeados que permitam criar um carro novo (zeroKm) ou usado (usado com ano definido).

18. Implemente uma classe Aluno que possua um m√©todo que retorne se o aluno est√° aprovado ou reprovado, considerando a m√©dia m√≠nima de 7.

19. Crie uma classe Produto que tenha um atributo preco e aplique um desconto fixo de 10% ao chamar um m√©todo aplicarDesconto().

20. Crie um programa que utilize tudo o que foi aprendido, simulando um sistema de cadastro de pessoas, onde o usu√°rio pode inserir nome, idade e peso, com valida√ß√£o dos dados antes de exibi-los na tela.

